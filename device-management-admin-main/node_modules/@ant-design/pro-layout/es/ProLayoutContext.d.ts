import React from 'react';
export declare type BaseDesignToken = {
    /**
     * 主色
     */
    primaryColor: string;
    /**
     *错误色
     */
    errorColor: string;
    /**
     * 成功色
     */
    successColor: string;
    /**
     *通知色
     */
    infoColor: string;
    /**
     *警告色
     */
    warningColor: string;
    /**
     * 正文色
     */
    colorText: string;
    /**
     * 次级色
     */
    colorTextSecondary: string;
    /**
     * 禁用的颜色
     */
    colorTextDisable: string;
    /**
     * 标题色
     */
    colorHeading: string;
    /**
     * 边框基本色
     */
    borderColorBase: string;
    /**
     * 分隔边框的颜色
     */
    borderColorSplit: string;
    /**
     * 默认阴影
     */
    boxShadowBase: string;
    /**
     * 默认圆角
     */
    borderRadiusBase: string;
};
export declare const baseDesignTokens: BaseDesignToken;
declare type BaseLayoutMenuDesignToken = {
    /**
     * menuItem 的字体颜色
     */
    menuTextColor: string;
    /**
     * menu 的二级字体颜色，比如 footer 和 action 的 icon
     */
    menuTextColorSecondary: string;
    /**
     * menuItem 的选中字体颜色
     */
    menuSelectedTextColor: string;
    /**
     * 顶部 MenuItem 的 padding 设置
     */
    horizontalMenuItemPadding: string;
    /**
     * subMenuItem 的选中字体颜色
     */
    subMenuSelectedTextColor: string;
    /**
     * menuItem 的 hover 背景颜色
     */
    menuItemHoverBgColor: string;
    /**
     * menuItem 的选中背景颜色
     */
    menuItemSelectedBgColor: string;
    /**
     * 收起 menuItem 的 hover 背景颜色
     */
    menuItemCollapsedHoverBgColor: string;
    /**
     * 收起 menuItem 的选中背景颜色
     */
    menuItemCollapsedSelectedBgColor: string;
};
declare type BaseLayoutDesignToken = {
    /**
     * layout 的背景颜色
     */
    layoutBgColor: string;
    /**
     * layout 的背景
     */
    layoutBg: string;
    /**
     * 跨站点应用的图标颜色
     */
    appListIconTextColor: string;
    /**
     * 跨站点应用的图标hover颜色
     */
    appListIconHoverTextColor: string;
    /**
     * 跨站点应用的图标hover背景颜色
     */
    appListIconHoverBgColor: string;
    /**
     * 侧边side的 token 配置
     */
    sider: BaseLayoutMenuDesignToken & {
        /**
         * menu 顶部 title 的字体颜色
         */
        menuTitleTextColor: string;
        /**
         * menu 的背景颜色
         */
        menuBackgroundColor: string;
        /**
         * 展开 menuItem 分割线的颜色
         */
        menuItemDividerColor: string;
        /**
         * menuItem 的箭头颜色
         */
        menuSubArrowColor: string;
        /**
         * 展开收起按钮背景颜色
         */
        collapsedButtonBgColor: string;
        /**
         *  展开收起按钮 hover 时字体颜色
         */
        collapsedButtonHoverTextColor: string;
        /**
         * 展开收起按钮字体颜色
         */
        collapsedButtonTextColor: string;
    };
    /**
     * header 的 token 设置
     */
    header: BaseLayoutMenuDesignToken & {
        /**
         * header 的标题颜色
         */
        headerTitleColor: string;
        /**
         * header 的背景颜色
         */
        headerBgColor: string;
        /**
         * 右上角字体颜色
         */
        rightActionsItemTextColor: string;
        /**
         * 右上角选中的 hover 颜色
         */
        rightActionsItemHoverBgColor: string;
    };
    /**
     * pageContainer
     */
    pageContainer: {
        /**
         * pageContainer 自带的 margin
         */
        pageContainerContentMargin: string;
        /**
         * pageContainer 的背景颜色
         */
        pageContainerBgColor: string;
        /**
         * pageContainer 被固定时的背景颜色
         */
        pageContainerFixedBgColor: string;
    };
};
declare type DeepPartial<T> = T extends object ? {
    [P in keyof T]?: DeepPartial<T[P]>;
} : T;
export declare type LayoutDesignToken = BaseLayoutDesignToken & BaseDesignToken;
export declare const DefaultDesignToken: {
    layoutBgColor: string;
    layoutBg: string;
    appListIconTextColor: string;
    menuToken: {
        menuItemHoverBgColor: string;
        menuItemSelectedBgColor: string;
        menuItemCollapsedHoverBgColor: string;
        menuItemCollapsedSelectedBgColor: string;
        menuSelectedTextColor: string;
        subMenuSelectedTextColor: string;
        horizontalMenuItemPadding: string;
    };
    header: {
        headerBgColor: string;
        rightActionsItemHoverBgColor: string;
    };
    sider: {
        menuBackgroundColor: string;
        menuSubArrowColor: string;
        collapsedButtonBgColor: string;
    };
    pageContainer: {
        pageContainerBgColor: string;
        pageContainerFixedBgColor: string;
        pageContainerContentMargin: string;
    };
};
export declare const getLayoutDesignToken: (baseDesignTokens: DeepPartial<LayoutDesignToken>) => LayoutDesignToken;
export declare const ProLayoutContext: React.Context<LayoutDesignToken>;
export declare type ProLayoutProviderProps = {
    token?: DeepPartial<LayoutDesignToken>;
    children?: React.ReactNode;
};
export declare const ProLayoutProvider: React.FC<ProLayoutProviderProps>;
export {};
