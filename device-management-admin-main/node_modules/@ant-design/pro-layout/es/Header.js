import _defineProperty from "@babel/runtime/helpers/esm/defineProperty";
import _objectSpread from "@babel/runtime/helpers/esm/objectSpread2";
import _taggedTemplateLiteral from "@babel/runtime/helpers/esm/taggedTemplateLiteral";
import "antd/es/layout/style";
import _Layout from "antd/es/layout";

var _templateObject, _templateObject2;

import { jsx as _jsx, Fragment as _Fragment, jsxs as _jsxs } from "react/jsx-runtime";
import classNames from 'classnames';
import { useCallback, useContext, useMemo } from 'react';
import { GlobalHeader } from './components/GlobalHeader';
import { TopNavHeader } from './components/TopNavHeader';
import { css, cx } from './emotion';
import { DefaultDesignToken, ProLayoutContext } from './ProLayoutContext';
import { clearMenuItem } from './utils/utils';
var Header = _Layout.Header;
var ProLayoutFixedHeaderCss = css({
  position: 'fixed',
  top: 0,
  padding: 0,
  backgroundColor: 'transparent'
});

var getProLayoutHeaderCss = function getProLayoutHeaderCss(designToken) {
  /**
   * 有没有设置默认的背景颜色，没有的话是透明的
   */
  var isChangeHeaderBgColor = designToken.header.headerBgColor !== DefaultDesignToken.header.headerBgColor;
  return css(_templateObject || (_templateObject = _taggedTemplateLiteral(["\n    z-index: 9;\n    width: 100%;\n    padding: 0 8px;\n    border-bottom: 1px solid ", ";\n    transition: width 0.3s cubic-bezier(0.645, 0.045, 0.355, 1);\n\n    ", "\n    ", "\n  "])), designToken.borderColorSplit, isChangeHeaderBgColor && "background-color: ".concat(designToken.header.headerBgColor), !isChangeHeaderBgColor && "\n      background-color: rgba(255, 255, 255, 0.58);\n      -webkit-backdrop-filter: blur(8px);\n      backdrop-filter: blur(8px);\n    ");
};

var DefaultHeader = function DefaultHeader(props) {
  var _classNames;

  var designToken = useContext(ProLayoutContext);
  var isMobile = props.isMobile,
      fixedHeader = props.fixedHeader,
      propsClassName = props.className,
      style = props.style,
      collapsed = props.collapsed,
      prefixCls = props.prefixCls,
      headerHeight = props.headerHeight,
      onCollapse = props.onCollapse,
      navTheme = props.navTheme,
      layout = props.layout,
      headerRender = props.headerRender,
      headerContentRender = props.headerContentRender;
  var renderContent = useCallback(function () {
    var isTop = layout === 'top';
    var clearMenuData = clearMenuItem(props.menuData || []);

    var defaultDom = _jsx(GlobalHeader, _objectSpread(_objectSpread({
      onCollapse: onCollapse
    }, props), {}, {
      menuData: clearMenuData,
      children: headerContentRender && headerContentRender(props, null)
    }));

    if (isTop && !isMobile) {
      defaultDom = _jsx(TopNavHeader, _objectSpread(_objectSpread({
        theme: navTheme,
        mode: "horizontal",
        onCollapse: onCollapse
      }, props), {}, {
        menuData: clearMenuData
      }));
    }

    if (headerRender && typeof headerRender === 'function') {
      return headerRender(props, defaultDom);
    }

    return defaultDom;
  }, [headerContentRender, headerRender, isMobile, layout, navTheme, onCollapse, props]);
  var getHeaderActionsCss = useCallback(function () {
    return css(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral(["\n      .", "-header-actions {\n        display: flex;\n        align-items: center;\n        font-size: 16;\n        cursor: pointer;\n        &-item {\n          padding: 0 8px;\n          &:hover {\n            color: ", ";\n          }\n        }\n      }\n      .", "-header-realDark {\n        box-shadow: 0 2px 8px 0 rgba(0, 0, 0, 65%);\n      }\n      .", "-header-actions-header-action {\n        transition: width 0.3s cubic-bezier(0.645, 0.045, 0.355, 1);\n      }\n    "])), propsClassName, designToken.colorText, propsClassName, propsClassName);
  }, [designToken.colorText, propsClassName]);
  var needFixedHeader = fixedHeader || layout === 'mix';
  var isTop = layout === 'top';
  var className = classNames(propsClassName, (_classNames = {}, _defineProperty(_classNames, "".concat(prefixCls, "-fixed-header"), needFixedHeader), _defineProperty(_classNames, "".concat(prefixCls, "-fixed-header-action"), !collapsed), _defineProperty(_classNames, "".concat(prefixCls, "-top-menu"), isTop), _defineProperty(_classNames, "".concat(prefixCls, "-header"), true), _classNames));
  var right = needFixedHeader ? 0 : undefined;
  var headerCss = useMemo(function () {
    if (layout === 'side' && !isMobile) return undefined;
    return cx(needFixedHeader && ProLayoutFixedHeaderCss, css(_objectSpread({
      height: headerHeight,
      lineHeight: "".concat(headerHeight, "px"),
      width: '100%',
      zIndex: layout === 'mix' ? 100 : 19,
      right: right
    }, style)), className, getProLayoutHeaderCss(designToken), getHeaderActionsCss());
  }, [className, designToken, getHeaderActionsCss, headerHeight, isMobile, layout, needFixedHeader, right, style]);
  if (layout === 'side' && !isMobile) return null;
  return _jsxs(_Fragment, {
    children: [needFixedHeader && _jsx(Header, {
      style: {
        height: headerHeight,
        lineHeight: "".concat(headerHeight, "px"),
        backgroundColor: 'transparent'
      }
    }), _jsx(Header, {
      className: headerCss,
      children: renderContent()
    })]
  });
};

export { DefaultHeader };