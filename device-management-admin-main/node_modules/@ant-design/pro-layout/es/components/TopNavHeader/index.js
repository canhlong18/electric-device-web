import "antd/es/config-provider/style";
import _ConfigProvider from "antd/es/config-provider";
import _regeneratorRuntime from "@babel/runtime/helpers/esm/regeneratorRuntime";
import _asyncToGenerator from "@babel/runtime/helpers/esm/asyncToGenerator";
import _taggedTemplateLiteral from "@babel/runtime/helpers/esm/taggedTemplateLiteral";
import _objectSpread from "@babel/runtime/helpers/esm/objectSpread2";
import "antd/es/avatar/style";
import _Avatar from "antd/es/avatar";
import _slicedToArray from "@babel/runtime/helpers/esm/slicedToArray";
import _objectWithoutProperties from "@babel/runtime/helpers/esm/objectWithoutProperties";

var _templateObject, _templateObject2, _templateObject3, _templateObject4, _templateObject5, _templateObject6, _templateObject7, _templateObject8, _templateObject9, _templateObject10;

var _excluded = ["rightContentRender", "prefixCls", "avatarProps", "actionsRender", "headerContentRender"],
    _excluded2 = ["title"];
import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { createElement as _createElement } from "react";
import { useDebounceFn } from '@ant-design/pro-utils';
import ResizeObserver from 'rc-resize-observer';
import React, { useContext, useMemo, useRef, useState } from 'react';
import { css, cx } from '../../emotion';
import { ProLayoutContext } from '../../ProLayoutContext';
import { AppsLogoComponents } from '../AppsLogoComponents';
import { BaseMenu } from '../SiderMenu/BaseMenu';
import { renderLogoAndTitle } from '../SiderMenu/SiderMenu';
/**
 * 抽离出来是为了防止 rightSize 经常改变导致菜单 render
 *
 * @param param0
 */

export var RightContent = function RightContent(_ref) {
  var rightContentRender = _ref.rightContentRender,
      prefixCls = _ref.prefixCls,
      avatarProps = _ref.avatarProps,
      actionsRender = _ref.actionsRender,
      headerContentRender = _ref.headerContentRender,
      props = _objectWithoutProperties(_ref, _excluded);

  var designToken = useContext(ProLayoutContext);

  var _useState = useState('auto'),
      _useState2 = _slicedToArray(_useState, 2),
      rightSize = _useState2[0],
      setRightSize = _useState2[1];

  var avatarDom = useMemo(function () {
    if (!avatarProps) return null;

    var title = avatarProps.title,
        rest = _objectWithoutProperties(avatarProps, _excluded2);

    return [/*#__PURE__*/_createElement(_Avatar, _objectSpread(_objectSpread({
      size: "large"
    }, rest), {}, {
      key: "avatar"
    })), title ? _jsx("span", {
      style: {
        marginLeft: 8
      },
      children: title
    }, "name") : undefined];
  }, [avatarProps]);

  var rightActionsRender = function rightActionsRender(restParams) {
    var doms = actionsRender && (actionsRender === null || actionsRender === void 0 ? void 0 : actionsRender(restParams));
    if (!doms && !avatarDom) return null;
    if (!Array.isArray(doms)) doms = [doms];
    return _jsxs("div", {
      className: cx("".concat(prefixCls, "-header-actions"), css(_templateObject || (_templateObject = _taggedTemplateLiteral(["\n            display: flex;\n            height: 100%;\n          "])))),
      children: [doms.filter(Boolean).map(function (dom, index) {
        var _designToken$header, _designToken$header2;

        var hideHover = false; // 如果配置了 hideHover 就不展示 hover 效果了

        if ( /*#__PURE__*/React.isValidElement(dom)) {
          var _dom$props;

          hideHover = !!(dom === null || dom === void 0 ? void 0 : (_dom$props = dom.props) === null || _dom$props === void 0 ? void 0 : _dom$props['aria-hidden']);
        }

        return _jsx("div", {
          className: cx("".concat(prefixCls, "-header-actions-item"), css(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral(["\n                  display: inline-flex;\n                  align-items: center;\n                  justify-content: center;\n                  padding: 0px 6px;\n                  font-size: 16px;\n                  color: ", ";\n                  cursor: pointer;\n                  border-radius: ", ";\n                "])), designToken === null || designToken === void 0 ? void 0 : (_designToken$header = designToken.header) === null || _designToken$header === void 0 ? void 0 : _designToken$header.rightActionsItemTextColor, designToken.borderRadiusBase), !hideHover && css(_templateObject3 || (_templateObject3 = _taggedTemplateLiteral(["\n                    > * {\n                      padding: 6px;\n                      border-radius: ", ";\n                      &:hover {\n                        background-color: ", ";\n                      }\n                    }\n                  "])), designToken.borderRadiusBase, (_designToken$header2 = designToken.header) === null || _designToken$header2 === void 0 ? void 0 : _designToken$header2.rightActionsItemHoverBgColor)),
          children: dom
        }, index);
      }), avatarDom && _jsx("span", {
        className: cx("".concat(prefixCls, "-header-actions-item"), css(_templateObject4 || (_templateObject4 = _taggedTemplateLiteral(["\n                display: inline-flex;\n                align-items: center;\n                justify-content: center;\n                padding-left: 16px;\n                padding-right: 16px;\n              "])))),
        children: _jsx("div", {
          className: css(_templateObject5 || (_templateObject5 = _taggedTemplateLiteral(["\n                height: 44px;\n                padding: 8px;\n                cursor: pointer;\n                display: flex;\n                align-items: center;\n                line-height: 44px;\n                border-radius: ", ";\n                &:hover {\n                  background-color: rgba(0, 0, 0, 0.03);\n                }\n              "])), designToken.borderRadiusBase),
          children: avatarDom
        })
      })]
    });
  };
  /** 减少一下渲染的次数 */


  var setRightSizeDebounceFn = useDebounceFn( /*#__PURE__*/function () {
    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(width) {
      return _regeneratorRuntime().wrap(function _callee$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              setRightSize(width);

            case 1:
            case "end":
              return _context.stop();
          }
        }
      }, _callee);
    }));

    return function (_x) {
      return _ref2.apply(this, arguments);
    };
  }(), 160);
  return _jsx("div", {
    className: "".concat(prefixCls, "-right-content"),
    style: {
      minWidth: rightSize,
      height: '100%'
    },
    children: _jsx("div", {
      style: {
        height: '100%'
      },
      children: _jsx(ResizeObserver, {
        onResize: function onResize(_ref3) {
          var width = _ref3.width;
          setRightSizeDebounceFn.run(width);
        },
        children: (rightContentRender || rightActionsRender) && _jsx("div", {
          style: {
            display: 'flex',
            alignItems: 'center',
            height: '100%',
            justifyContent: 'flex-end'
          },
          children: (rightContentRender || rightActionsRender)(_objectSpread(_objectSpread({}, props), {}, {
            // 测试专用
            //@ts-ignore
            rightContentSize: rightSize
          }))
        })
      })
    })
  });
};

var TopNavHeader = function TopNavHeader(props) {
  var _designToken$header3;

  var ref = useRef(null);
  var onMenuHeaderClick = props.onMenuHeaderClick,
      contentWidth = props.contentWidth,
      rightContentRender = props.rightContentRender,
      propsClassName = props.className,
      style = props.style,
      headerContentRender = props.headerContentRender,
      layout = props.layout,
      actionsRender = props.actionsRender;
  var designToken = useContext(ProLayoutContext);

  var _useContext = useContext(_ConfigProvider.ConfigContext),
      getPrefixCls = _useContext.getPrefixCls;

  var antdPreFix = getPrefixCls();
  var prefixCls = "".concat(props.prefixCls || getPrefixCls('pro'), "-top-nav-header");
  var headerDom = renderLogoAndTitle(_objectSpread(_objectSpread({}, props), {}, {
    collapsed: false
  }), layout === 'mix' ? 'headerTitleRender' : undefined);
  var contentDom = useMemo(function () {
    var defaultDom = _jsx(BaseMenu, _objectSpread(_objectSpread(_objectSpread({
      theme: "light"
    }, props), props.menuProps), {}, {
      collapsed: false,
      menuRenderType: "header",
      mode: "horizontal"
    }));

    if (headerContentRender) {
      return headerContentRender(props, defaultDom);
    }

    return defaultDom;
  }, [headerContentRender, props]);
  return _jsx("div", {
    className: cx(prefixCls, propsClassName, {
      light: true
    }, css(_templateObject6 || (_templateObject6 = _taggedTemplateLiteral(["\n          position: relative;\n          width: 100%;\n          height: 100%;\n          background-color: transparent;\n\n          .", "-menu {\n            background: transparent;\n          }\n          .anticon {\n            color: inherit;\n          }\n        "])), antdPreFix)),
    style: style,
    children: _jsxs("div", {
      ref: ref,
      className: cx("".concat(prefixCls, "-main"), "".concat(contentWidth === 'Fixed' ? 'wide' : ''), css(_templateObject7 || (_templateObject7 = _taggedTemplateLiteral(["\n            display: flex;\n            height: 100%;\n            padding-left: 16px;\n          "])))),
      children: [headerDom && _jsxs("div", {
        className: cx("".concat(prefixCls, "-main-left"), css(_templateObject8 || (_templateObject8 = _taggedTemplateLiteral(["\n                display: flex;\n                align-items: center;\n                min-width: 192px;\n                .", "-pro-basicLayout-apps-icon {\n                  margin-right: 16px;\n                }\n              "])), antdPreFix)),
        onClick: onMenuHeaderClick,
        children: [_jsx(AppsLogoComponents, _objectSpread({}, props)), _jsx("div", {
          className: cx("".concat(prefixCls, "-logo"), css(_templateObject9 || (_templateObject9 = _taggedTemplateLiteral(["\n                  position: relative;\n                  min-width: 165px;\n                  display: flex;\n                  height: 100%;\n                  overflow: hidden;\n                  a {\n                    display: flex;\n                    align-items: center;\n                    min-height: 22px;\n                    font-size: 22px;\n                  }\n                  img {\n                    display: inline-block;\n                    height: 32px;\n                    vertical-align: middle;\n                  }\n\n                  h1 {\n                    display: inline-block;\n                    margin: 0 0 0 6px;\n                    color: ", ";\n                    font-weight: 600;\n                    font-size: 16px;\n                    vertical-align: top;\n                  }\n                "])), designToken === null || designToken === void 0 ? void 0 : (_designToken$header3 = designToken.header) === null || _designToken$header3 === void 0 ? void 0 : _designToken$header3.headerTitleColor)),
          id: "logo",
          children: headerDom
        }, "logo")]
      }), _jsx("div", {
        style: {
          flex: 1
        },
        className: cx("".concat(prefixCls, "-menu"), css(_templateObject10 || (_templateObject10 = _taggedTemplateLiteral(["\n              min-width: 0;\n              display: flex;\n              align-items: center;\n              .", "-menu.", "-menu-horizontal {\n                height: 100%;\n                border: none;\n              }\n            "])), antdPreFix, antdPreFix)),
        children: contentDom
      }), (rightContentRender || actionsRender || props.avatarProps) && _jsx(RightContent, _objectSpread({
        rightContentRender: rightContentRender
      }, props))]
    })
  });
};

export { TopNavHeader };