import _objectSpread from "@babel/runtime/helpers/esm/objectSpread2";
import _taggedTemplateLiteral from "@babel/runtime/helpers/esm/taggedTemplateLiteral";
import "antd/es/config-provider/style";
import _ConfigProvider from "antd/es/config-provider";
import _objectWithoutProperties from "@babel/runtime/helpers/esm/objectWithoutProperties";

var _templateObject, _templateObject2, _templateObject3;

var _excluded = ["children", "className", "extra", "style", "renderContent"];
import { jsx as _jsx, Fragment as _Fragment, jsxs as _jsxs } from "react/jsx-runtime";
/* eslint-disable react-hooks/exhaustive-deps */

import { isBrowser } from '@ant-design/pro-utils';
import omit from 'omit.js';
import { useContext, useEffect, useMemo } from 'react';
import { createPortal } from 'react-dom';
import { css, cx } from '../../emotion';
import { RouteContext } from '../../index';
import { ProLayoutContext } from '../../ProLayoutContext';

var FooterToolbar = function FooterToolbar(props) {
  var designToken = useContext(ProLayoutContext);

  var children = props.children,
      className = props.className,
      extra = props.extra,
      style = props.style,
      renderContent = props.renderContent,
      restProps = _objectWithoutProperties(props, _excluded);

  var _useContext = useContext(_ConfigProvider.ConfigContext),
      getPrefixCls = _useContext.getPrefixCls;

  var prefixCls = props.prefixCls || getPrefixCls('pro');
  var baseClassName = "".concat(prefixCls, "-footer-bar");
  var value = useContext(RouteContext);
  var width = useMemo(function () {
    var hasSiderMenu = value.hasSiderMenu,
        isMobile = value.isMobile,
        siderWidth = value.siderWidth;

    if (!hasSiderMenu) {
      return undefined;
    } // 0 or undefined


    if (!siderWidth) {
      return '100%';
    }

    return isMobile ? '100%' : "calc(100% - ".concat(siderWidth, "px)"); // eslint-disable-next-line react-hooks/exhaustive-deps
  }, [value.collapsed, value.hasSiderMenu, value.isMobile, value.siderWidth]);

  var dom = _jsxs(_Fragment, {
    children: [_jsx("div", {
      className: cx("".concat(baseClassName, "-left"), css(_templateObject || (_templateObject = _taggedTemplateLiteral(["\n            flex: 1;\n          "])))),
      children: extra
    }), _jsx("div", {
      className: cx("".concat(baseClassName, "-right"), css(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral(["\n            > * {\n              margin-right: 8px;\n              &:last-child {\n                margin: 0;\n              }\n            }\n          "])))),
      children: children
    })]
  });
  /** 告诉 props 是否存在 footerBar */


  useEffect(function () {
    if (!value || !(value === null || value === void 0 ? void 0 : value.setHasFooterToolbar)) {
      return function () {};
    }

    value === null || value === void 0 ? void 0 : value.setHasFooterToolbar(true);
    return function () {
      var _value$setHasFooterTo;

      value === null || value === void 0 ? void 0 : (_value$setHasFooterTo = value.setHasFooterToolbar) === null || _value$setHasFooterTo === void 0 ? void 0 : _value$setHasFooterTo.call(value, false);
    }; // eslint-disable-next-line react-hooks/exhaustive-deps
  }, []);

  var renderDom = _jsx("div", _objectSpread(_objectSpread({
    className: cx(className, baseClassName, css(_templateObject3 || (_templateObject3 = _taggedTemplateLiteral(["\n          position: fixed;\n          right: 0;\n          bottom: 0;\n          z-index: 99;\n          display: flex;\n          align-items: center;\n          width: 100%;\n          padding: 0 24px;\n          line-height: 64px;\n          background-color: ", ";\n          border-top: 1px solid ", ";\n          transition: width 0.3s cubic-bezier(0.645, 0.045, 0.355, 1);\n          background-color: rgba(255, 255, 255, 0.58);\n          -webkit-backdrop-filter: blur(8px);\n          backdrop-filter: blur(8px);\n        "])), designToken.layoutBgColor, designToken.borderColorSplit)),
    style: _objectSpread({
      width: width
    }, style)
  }, omit(restProps, ['prefixCls'])), {}, {
    children: renderContent ? renderContent(_objectSpread(_objectSpread(_objectSpread({}, props), value), {}, {
      leftWidth: width
    }), dom) : dom
  }));

  return !isBrowser() ? renderDom : /*#__PURE__*/createPortal(renderDom, document.body);
};

export { FooterToolbar };