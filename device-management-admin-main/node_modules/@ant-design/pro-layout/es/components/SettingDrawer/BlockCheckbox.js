import _taggedTemplateLiteral from "@babel/runtime/helpers/esm/taggedTemplateLiteral";
import "antd/es/tooltip/style";
import _Tooltip from "antd/es/tooltip";

var _templateObject, _templateObject2, _templateObject3, _templateObject4, _templateObject5, _templateObject6, _templateObject7;

import { jsx as _jsx } from "react/jsx-runtime";
import { CheckOutlined } from '@ant-design/icons';
import classNames from 'classnames';
import { useMemo } from 'react';
import { css, cx } from '../../emotion';

var BlockCheckbox = function BlockCheckbox(_ref) {
  var value = _ref.value,
      configType = _ref.configType,
      onChange = _ref.onChange,
      list = _ref.list,
      prefixCls = _ref.prefixCls;
  var baseClassName = "".concat(prefixCls, "-drawer-block-checkbox");
  var dom = useMemo(function () {
    var domList = (list || []).map(function (item) {
      return _jsx(_Tooltip, {
        title: item.title,
        children: _jsx("div", {
          className: cx(classNames("".concat(baseClassName, "-item"), "".concat(baseClassName, "-item-").concat(item.key), "".concat(baseClassName, "-").concat(configType, "-item")), css(_templateObject || (_templateObject = _taggedTemplateLiteral(["\n              position: relative;\n              width: 44px;\n              height: 36px;\n              margin-right: 16px;\n              overflow: hidden;\n              background-color: #f7f8fa;\n              border-radius: 4px;\n              box-shadow: 0 1px 2.5px 0 rgba(0, 0, 0, 0.18);\n              cursor: pointer;\n              &::before {\n                position: absolute;\n                top: 0;\n                left: 0;\n                width: 33%;\n                height: 100%;\n                background-color: #fff;\n                content: '';\n              }\n              &::after {\n                position: absolute;\n                top: 0;\n                left: 0;\n                width: 100%;\n                height: 25%;\n                background-color: #fff;\n                content: '';\n              }\n            "]))), item.key === 'realDark' && css(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral(["\n                background-color: rgba(0, 21, 41, 0.85);\n                &::before {\n                  background-color: rgba(0, 21, 41, 0.65);\n                  content: '';\n                }\n                &::after {\n                  background-color: rgba(0, 21, 41, 0.85);\n                }\n              "]))), item.key === 'light' && css(_templateObject3 || (_templateObject3 = _taggedTemplateLiteral(["\n                &::before {\n                  background-color: #fff;\n                  content: '';\n                }\n                &::after {\n                  background-color: #fff;\n                }\n              "]))), (item.key === 'dark' || item.key === 'side') && css(_templateObject4 || (_templateObject4 = _taggedTemplateLiteral(["\n                &::before {\n                  z-index: 1;\n                  background-color: #001529;\n                  content: '';\n                }\n                &::after {\n                  background-color: #fff;\n                }\n              "]))), item.key === 'top' && css(_templateObject5 || (_templateObject5 = _taggedTemplateLiteral(["\n                &::before {\n                  background-color: transparent;\n                  content: '';\n                }\n                &::after {\n                  background-color: #001529;\n                }\n              "]))), item.key === 'mix' && css(_templateObject6 || (_templateObject6 = _taggedTemplateLiteral(["\n                ::before {\n                  background-color: #fff;\n                  content: '';\n                }\n                &::after {\n                  background-color: #001529;\n                }\n              "])))),
          onClick: function onClick() {
            return onChange(item.key);
          },
          children: _jsx(CheckOutlined, {
            className: cx("".concat(baseClassName, "-selectIcon"), css(_templateObject7 || (_templateObject7 = _taggedTemplateLiteral(["\n                position: absolute;\n                right: 6px;\n                bottom: 4px;\n                color: var(--ant-primary-color);\n                font-weight: bold;\n                font-size: 14px;\n                pointer-events: none;\n                .action {\n                  color: var(--ant-primary-color);\n                }\n              "])))),
            style: {
              display: value === item.key ? 'block' : 'none'
            }
          })
        })
      }, item.key);
    });
    return domList; // eslint-disable-next-line react-hooks/exhaustive-deps
  }, [value, list === null || list === void 0 ? void 0 : list.length, onChange]);
  return _jsx("div", {
    className: baseClassName,
    style: {
      display: 'flex',
      minHeight: 42
    },
    children: dom
  });
};

export { BlockCheckbox };