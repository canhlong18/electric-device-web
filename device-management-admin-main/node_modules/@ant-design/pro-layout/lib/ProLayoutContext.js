"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault").default;

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getLayoutDesignToken = exports.baseDesignTokens = exports.ProLayoutProvider = exports.ProLayoutContext = exports.DefaultDesignToken = void 0;

var _objectSpread2 = _interopRequireDefault(require("@babel/runtime/helpers/objectSpread2"));

var _jsxRuntime = require("react/jsx-runtime");

var _react = _interopRequireDefault(require("react"));

var baseDesignTokens = {
  /**
   * 主色
   */
  primaryColor: '#1677FF',

  /**
   *错误色
   */
  errorColor: '#ff4d4f',

  /**
   * 成功色
   */
  successColor: '#1677FF',

  /**
   *通知色
   */
  infoColor: '#1677FF',

  /**
   *警告色
   */
  warningColor: '#faad14',

  /**
   * 正文色
   */
  colorText: 'rgba(0, 0, 0, 0.65)',

  /**
   * 标题色
   */
  colorHeading: 'rgba(0, 0, 0, 0.85)',

  /**
   * 次级色
   */
  colorTextSecondary: 'rgba(0, 0, 0, 0.45)',

  /**
   * 禁用的文本颜色
   */
  colorTextDisable: 'rgba(0, 0, 0, 0.25)',

  /**
   * 边框基本色
   */
  borderColorBase: '#d9d9d9',

  /**
   * 分隔边框的颜色
   */
  borderColorSplit: 'rgba(0, 0, 0, 0.06)',

  /**
   * 默认阴影
   */
  boxShadowBase: '',

  /**
   * 默认圆角
   */
  borderRadiusBase: '4px'
}; // DesignToken 的默认样式

exports.baseDesignTokens = baseDesignTokens;
var DefaultDesignToken = {
  layoutBgColor: '#f7f8fa',
  layoutBg: 'linear-gradient(#fff, #f7f8fa 28%)',
  appListIconTextColor: '#666',
  menuToken: {
    menuItemHoverBgColor: 'rgba(90, 75, 75, 0.03)',
    menuItemSelectedBgColor: 'rgba(0, 0, 0, 0.04)',
    menuItemCollapsedHoverBgColor: 'rgba(90, 75, 75, 0.03)',
    menuItemCollapsedSelectedBgColor: 'rgba(0, 0, 0, 0.04)',
    menuSelectedTextColor: 'rgb(0,0,0,0.95)',
    subMenuSelectedTextColor: 'rgb(0,0,0,0.95)',
    horizontalMenuItemPadding: '0 20px'
  },
  header: {
    headerBgColor: 'rgba(240, 242, 245, 0.4)',
    rightActionsItemHoverBgColor: 'rgba(0, 0, 0, 0.03)'
  },
  sider: {
    menuBackgroundColor: 'transparent',
    menuSubArrowColor: 'rgba(0, 0, 0, 0.25)',
    collapsedButtonBgColor: '#fff'
  },
  pageContainer: {
    pageContainerBgColor: 'transparent',
    pageContainerFixedBgColor: '#fff',
    pageContainerContentMargin: '0px 40px 0px 40px'
  }
};
exports.DefaultDesignToken = DefaultDesignToken;

var getLayoutDesignToken = function getLayoutDesignToken(designTokens) {
  var finalDesignTokens = (0, _objectSpread2.default)((0, _objectSpread2.default)({}, baseDesignTokens), designTokens);
  var menuToken = (0, _objectSpread2.default)({
    menuTextColor: finalDesignTokens.colorText,
    menuTextColorSecondary: finalDesignTokens.colorTextSecondary
  }, DefaultDesignToken.menuToken);
  return (0, _objectSpread2.default)((0, _objectSpread2.default)((0, _objectSpread2.default)({}, designTokens), {}, {
    layoutBgColor: '#f7f8fa',
    layoutBg: 'linear-gradient(#fff, #f7f8fa 28%)',
    appListIconTextColor: '#666',
    appListIconHoverTextColor: finalDesignTokens.colorText,
    appListIconHoverBgColor: menuToken.menuItemSelectedBgColor
  }, finalDesignTokens), {}, {
    header: (0, _objectSpread2.default)((0, _objectSpread2.default)((0, _objectSpread2.default)({}, menuToken), {}, {
      headerTitleColor: finalDesignTokens.colorHeading,
      rightActionsItemTextColor: finalDesignTokens.colorTextSecondary
    }, DefaultDesignToken.header), finalDesignTokens.header),
    sider: (0, _objectSpread2.default)((0, _objectSpread2.default)((0, _objectSpread2.default)({}, menuToken), {}, {
      menuItemDividerColor: finalDesignTokens.borderColorSplit,
      menuTitleTextColor: finalDesignTokens.colorHeading,
      collapsedButtonTextColor: menuToken === null || menuToken === void 0 ? void 0 : menuToken.menuTextColorSecondary,
      collapsedButtonHoverTextColor: menuToken === null || menuToken === void 0 ? void 0 : menuToken.menuTextColor
    }, DefaultDesignToken.sider), finalDesignTokens.sider),
    pageContainer: (0, _objectSpread2.default)((0, _objectSpread2.default)({}, DefaultDesignToken.pageContainer), finalDesignTokens.pageContainer)
  });
};

exports.getLayoutDesignToken = getLayoutDesignToken;
var defaultToken = getLayoutDesignToken(baseDesignTokens);

var ProLayoutContext = /*#__PURE__*/_react.default.createContext(defaultToken);

exports.ProLayoutContext = ProLayoutContext;

var ProLayoutProvider = function ProLayoutProvider(props) {
  return (0, _jsxRuntime.jsx)(ProLayoutContext.Provider, {
    value: (0, _objectSpread2.default)({}, getLayoutDesignToken((props === null || props === void 0 ? void 0 : props.token) || {})),
    children: props.children
  });
};

exports.ProLayoutProvider = ProLayoutProvider;