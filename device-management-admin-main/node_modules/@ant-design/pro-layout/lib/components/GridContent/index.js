"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault").default;

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.GridContent = void 0;

var _taggedTemplateLiteral2 = _interopRequireDefault(require("@babel/runtime/helpers/taggedTemplateLiteral"));

require("antd/lib/config-provider/style");

var _configProvider = _interopRequireDefault(require("antd/lib/config-provider"));

var _jsxRuntime = require("react/jsx-runtime");

var _react = require("react");

var _emotion = require("../../emotion");

var _RouteContext = require("../../RouteContext");

var _templateObject, _templateObject2;

/**
 * This component can support contentWidth so you don't need to calculate the width
 * contentWidth=Fixed, width will is 1200
 *
 * @param props
 */
var GridContent = function GridContent(props) {
  var value = (0, _react.useContext)(_RouteContext.RouteContext);
  var children = props.children,
      propsContentWidth = props.contentWidth,
      propsClassName = props.className,
      style = props.style;

  var _useContext = (0, _react.useContext)(_configProvider.default.ConfigContext),
      getPrefixCls = _useContext.getPrefixCls;

  var prefixCls = props.prefixCls || getPrefixCls('pro');
  var contentWidth = propsContentWidth || value.contentWidth;
  var className = "".concat(prefixCls, "-grid-content");
  var isWide = contentWidth === 'Fixed';
  return (0, _jsxRuntime.jsx)("div", {
    className: (0, _emotion.cx)(className, propsClassName, {
      wide: isWide
    }, (0, _emotion.css)(_templateObject || (_templateObject = (0, _taggedTemplateLiteral2.default)(["\n          width: 100%;\n          .", "-card:not(.", "-card-ghost) {\n            border-radius: 6px;\n            box-shadow: 0 2px 4px 0 rgba(0, 0, 0, 0.05), 0 1px 2px 0 rgba(25, 15, 15, 0.07),\n              0 0 1px 0 rgba(0, 0, 0, 0.08);\n          }\n        "])), prefixCls, prefixCls), isWide && (0, _emotion.css)(_templateObject2 || (_templateObject2 = (0, _taggedTemplateLiteral2.default)(["\n            max-width: 1152px;\n            margin: 0 auto;\n          "])))),
    style: style,
    children: (0, _jsxRuntime.jsx)("div", {
      className: "".concat(prefixCls, "-grid-content-children"),
      children: children
    })
  });
};

exports.GridContent = GridContent;