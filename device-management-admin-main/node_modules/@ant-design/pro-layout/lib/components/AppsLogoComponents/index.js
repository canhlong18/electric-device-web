"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault").default;

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.defaultRenderLogo = exports.AppsLogoComponents = void 0;

require("antd/lib/popover/style");

var _popover = _interopRequireDefault(require("antd/lib/popover"));

require("antd/lib/config-provider/style");

var _configProvider = _interopRequireDefault(require("antd/lib/config-provider"));

var _jsxRuntime = require("react/jsx-runtime");

var _react = require("react");

var _emotion = require("../../emotion");

var _ProLayoutContext = require("../../ProLayoutContext");

var _AppsLogo = require("./AppsLogo");

var _css = require("./css");

var _DefaultContent = require("./DefaultContent");

var _SimpleContent = require("./SimpleContent");

/**
 * 默认渲染logo的方式，如果是个string，用img。否则直接返回
 *
 * @param logo
 * @returns
 */
var defaultRenderLogo = function defaultRenderLogo(logo) {
  if (typeof logo === 'string') {
    return (0, _jsxRuntime.jsx)("img", {
      src: logo,
      alt: "logo"
    });
  }

  if (typeof logo === 'function') {
    return logo();
  }

  return logo;
};
/**
 * 相关品牌额icon 列表。用于展示相关的品牌
 *
 * @param props
 * @returns
 */


exports.defaultRenderLogo = defaultRenderLogo;

var AppsLogoComponents = function AppsLogoComponents(props) {
  var _props$appList;

  var designToken = (0, _react.useContext)(_ProLayoutContext.ProLayoutContext);
  var appList = props.appList,
      _props$prefixCls = props.prefixCls,
      prefixCls = _props$prefixCls === void 0 ? 'ant' : _props$prefixCls;
  var antdContext = (0, _react.useContext)(_configProvider.default.ConfigContext);
  var antdPreFixCls = antdContext.getPrefixCls();
  var popoverContent = (0, _react.useMemo)(function () {
    var isSimple = appList === null || appList === void 0 ? void 0 : appList.some(function (app) {
      return !(app === null || app === void 0 ? void 0 : app.desc);
    });

    if (isSimple) {
      return (0, _jsxRuntime.jsx)(_SimpleContent.SimpleContent, {
        appList: appList,
        prefixCls: prefixCls
      });
    }

    return (0, _jsxRuntime.jsx)(_DefaultContent.DefaultContent, {
      appList: appList,
      prefixCls: prefixCls
    });
  }, [appList, prefixCls]);
  if (!(props === null || props === void 0 ? void 0 : (_props$appList = props.appList) === null || _props$appList === void 0 ? void 0 : _props$appList.length)) return null;
  return (0, _jsxRuntime.jsx)(_popover.default, {
    placement: "bottomRight",
    trigger: ['click'],
    zIndex: 9999,
    arrowPointAtCenter: true,
    overlayClassName: (0, _emotion.cx)((0, _css.getAntdPopoverContentListCss)(antdPreFixCls)),
    content: popoverContent,
    children: (0, _jsxRuntime.jsx)("span", {
      onClick: function onClick(e) {
        e.stopPropagation();
      },
      className: (0, _emotion.cx)("".concat(prefixCls, "-basicLayout-apps-icon"), (0, _css.appIconsCss)(designToken)),
      children: (0, _jsxRuntime.jsx)(_AppsLogo.AppsLogo, {})
    })
  });
};

exports.AppsLogoComponents = AppsLogoComponents;