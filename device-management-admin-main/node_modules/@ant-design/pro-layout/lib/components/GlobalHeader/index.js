"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault").default;

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.GlobalHeader = void 0;

var _taggedTemplateLiteral2 = _interopRequireDefault(require("@babel/runtime/helpers/taggedTemplateLiteral"));

var _objectSpread2 = _interopRequireDefault(require("@babel/runtime/helpers/objectSpread2"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

require("antd/lib/config-provider/style");

var _configProvider = _interopRequireDefault(require("antd/lib/config-provider"));

var _jsxRuntime = require("react/jsx-runtime");

var _icons = require("@ant-design/icons");

var _classnames = _interopRequireDefault(require("classnames"));

var _react = require("react");

var _emotion = require("../../emotion");

var _ProLayoutContext = require("../../ProLayoutContext");

var _utils = require("../../utils/utils");

var _AppsLogoComponents = require("../AppsLogoComponents");

var _SiderMenu = require("../SiderMenu/SiderMenu");

var _TopNavHeader = require("../TopNavHeader");

var _templateObject, _templateObject2, _templateObject3, _templateObject4;

var renderLogo = function renderLogo(menuHeaderRender, logoDom) {
  if (menuHeaderRender === false) {
    return null;
  }

  if (menuHeaderRender) {
    return menuHeaderRender(logoDom, null);
  }

  return logoDom;
};

var GlobalHeader = function GlobalHeader(props) {
  var isMobile = props.isMobile,
      logo = props.logo,
      collapsed = props.collapsed,
      onCollapse = props.onCollapse,
      rightContentRender = props.rightContentRender,
      menuHeaderRender = props.menuHeaderRender,
      onMenuHeaderClick = props.onMenuHeaderClick,
      propClassName = props.className,
      style = props.style,
      layout = props.layout,
      children = props.children,
      _props$headerTheme = props.headerTheme,
      headerTheme = _props$headerTheme === void 0 ? 'dark' : _props$headerTheme,
      splitMenus = props.splitMenus,
      menuData = props.menuData,
      prefixCls = props.prefixCls;
  var designToken = (0, _react.useContext)(_ProLayoutContext.ProLayoutContext);

  var _useContext = (0, _react.useContext)(_configProvider.default.ConfigContext),
      direction = _useContext.direction;

  var baseClassName = "".concat(prefixCls, "-global-header");
  var className = (0, _classnames.default)(propClassName, baseClassName, (0, _defineProperty2.default)({}, "".concat(baseClassName, "-layout-").concat(layout), layout && headerTheme === 'dark'));

  if (layout === 'mix' && !isMobile && splitMenus) {
    var noChildrenMenuData = (menuData || []).map(function (item) {
      return (0, _objectSpread2.default)((0, _objectSpread2.default)({}, item), {}, {
        children: undefined,
        routes: undefined
      });
    });
    var clearMenuData = (0, _utils.clearMenuItem)(noChildrenMenuData);
    return (0, _jsxRuntime.jsx)(_TopNavHeader.TopNavHeader, (0, _objectSpread2.default)((0, _objectSpread2.default)({
      mode: "horizontal"
    }, props), {}, {
      splitMenus: false,
      menuData: clearMenuData,
      theme: headerTheme
    }));
  }

  var logoClassNames = (0, _classnames.default)("".concat(baseClassName, "-logo"), (0, _defineProperty2.default)({}, "".concat(baseClassName, "-logo-rtl"), direction === 'rtl'));
  var logoDom = (0, _jsxRuntime.jsx)("span", {
    className: (0, _emotion.cx)(logoClassNames, (0, _emotion.css)(_templateObject || (_templateObject = (0, _taggedTemplateLiteral2.default)(["\n          position: relative;\n          min-width: ", ";\n          margin-right: ", ";\n          a {\n            display: flex;\n            align-items: center;\n            height: 100%;\n            min-height: 22px;\n            font-size: 22px;\n            img {\n              height: 28px;\n            }\n            h1 {\n              height: 32px;\n              margin: 0 0 0 8px;\n              color: ", ";\n              font-weight: 600;\n              font-size: 18px;\n              line-height: 32px;\n            }\n          }\n        "])), isMobile ? '24px' : '154px', isMobile ? '0' : '16px', designToken.colorHeading)),
    children: (0, _jsxRuntime.jsx)("a", {
      children: (0, _AppsLogoComponents.defaultRenderLogo)(logo)
    })
  }, "logo");
  return (0, _jsxRuntime.jsxs)("div", {
    className: (0, _emotion.cx)(className, (0, _emotion.css)(_templateObject2 || (_templateObject2 = (0, _taggedTemplateLiteral2.default)(["\n          position: relative;\n          display: flex;\n          align-items: center;\n          height: 100%;\n          padding: 0 16px;\n\n          > a {\n            height: 100%;\n          }\n\n          .", "-basicLayout-apps-icon {\n            margin-right: 16px;\n          }\n        "])), prefixCls)),
    style: (0, _objectSpread2.default)({}, style),
    children: [isMobile && renderLogo(menuHeaderRender, logoDom), isMobile && (0, _jsxRuntime.jsx)("span", {
      className: (0, _emotion.cx)("".concat(baseClassName, "-collapsed-button"), (0, _emotion.css)(_templateObject3 || (_templateObject3 = (0, _taggedTemplateLiteral2.default)(["\n              display: flex;\n              align-items: center;\n              margin-left: 16px;\n              font-size: 20px;\n            "])))),
      onClick: function onClick() {
        onCollapse === null || onCollapse === void 0 ? void 0 : onCollapse(!collapsed);
      },
      children: collapsed ? (0, _jsxRuntime.jsx)(_icons.MenuUnfoldOutlined, {}) : (0, _jsxRuntime.jsx)(_icons.MenuFoldOutlined, {})
    }), layout === 'mix' && !isMobile && (0, _jsxRuntime.jsxs)(_jsxRuntime.Fragment, {
      children: [(0, _jsxRuntime.jsx)(_AppsLogoComponents.AppsLogoComponents, (0, _objectSpread2.default)({}, props)), (0, _jsxRuntime.jsx)("div", {
        className: (0, _emotion.cx)(logoClassNames, (0, _emotion.css)(_templateObject4 || (_templateObject4 = (0, _taggedTemplateLiteral2.default)(["\n                position: relative;\n                min-width: 156px;\n                margin-right: ", ";\n                a {\n                  display: flex;\n                  align-items: center;\n                  height: 100%;\n                  min-height: 22px;\n                  font-size: 22px;\n                  img {\n                    height: 28px;\n                  }\n                  h1 {\n                    height: 32px;\n                    margin: 0 0 0 8px;\n                    color: ", ";\n                    font-weight: 600;\n                    font-size: 18px;\n                    line-height: 32px;\n                  }\n                }\n              "])), isMobile ? '0' : '16px', designToken.colorHeading)),
        onClick: onMenuHeaderClick,
        children: (0, _SiderMenu.renderLogoAndTitle)((0, _objectSpread2.default)((0, _objectSpread2.default)({}, props), {}, {
          collapsed: false
        }), 'headerTitleRender')
      })]
    }), (0, _jsxRuntime.jsx)("div", {
      style: {
        flex: 1
      },
      children: children
    }), (rightContentRender || props.actionsRender || props.avatarProps) && (0, _jsxRuntime.jsx)(_TopNavHeader.RightContent, (0, _objectSpread2.default)({
      rightContentRender: rightContentRender
    }, props))]
  });
};

exports.GlobalHeader = GlobalHeader;