"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault").default;

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.siderTitleViewCss = exports.siderCss = exports.renderLogoAndTitle = exports.proLayoutTitleHide = exports.defaultIconCss = exports.SiderMenu = void 0;

require("antd/lib/menu/style");

var _menu = _interopRequireDefault(require("antd/lib/menu"));

require("antd/lib/avatar/style");

var _avatar = _interopRequireDefault(require("antd/lib/avatar"));

require("antd/lib/space/style");

var _space = _interopRequireDefault(require("antd/lib/space"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

require("antd/lib/config-provider/style");

var _configProvider = _interopRequireDefault(require("antd/lib/config-provider"));

var _objectSpread2 = _interopRequireDefault(require("@babel/runtime/helpers/objectSpread2"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

require("antd/lib/layout/style");

var _layout = _interopRequireDefault(require("antd/lib/layout"));

var _taggedTemplateLiteral2 = _interopRequireDefault(require("@babel/runtime/helpers/taggedTemplateLiteral"));

var _react = require("react");

var _jsxRuntime = require("react/jsx-runtime");

var _classnames = _interopRequireDefault(require("classnames"));

var _emotion = require("../../emotion");

var _ProLayoutContext = require("../../ProLayoutContext");

var _AppsLogoComponents = require("../AppsLogoComponents");

var _Arrow = require("./Arrow");

var _BaseMenu = require("./BaseMenu");

var _Counter = require("./Counter");

var _excluded = ["isMobile", "collapsed"];

var _templateObject, _templateObject2, _templateObject3, _templateObject4, _templateObject5, _templateObject6, _templateObject7, _templateObject8, _templateObject9, _templateObject10, _templateObject11, _templateObject12, _templateObject13, _templateObject14, _templateObject15, _templateObject16, _templateObject17, _templateObject18, _templateObject19, _templateObject20;

var defaultIconCss = function defaultIconCss(designToken) {
  return (0, _emotion.css)(_templateObject || (_templateObject = (0, _taggedTemplateLiteral2.default)(["\n  position: absolute;\n  top: 18px;\n  z-index: 101;\n  width: 24px;\n  height: 24px;\n  font-size: 14px;\n  color: ", ";\n  text-align: center;\n  border-radius: 40px;\n  right: -13px;\n  background-color: ", ";\n  transition: transform 0.3s;\n  font-size: 16px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n  .anticon {\n    font-size: 14px;\n  }\n\n  &:hover {\n    color: ", ";\n  }\n"])), designToken.sider.collapsedButtonTextColor, designToken.sider.collapsedButtonBgColor, designToken.sider.collapsedButtonHoverTextColor);
};

exports.defaultIconCss = defaultIconCss;
var proLayoutTitleHide = (0, _emotion.keyframes)(_templateObject2 || (_templateObject2 = (0, _taggedTemplateLiteral2.default)(["\n0% {\n  display: none;\n  width: 1px;\n  margin: 0;\n  overflow: hidden;\n  white-space: nowrap;\n  opacity: 0;\n}\n80% {\n  display: none;\n  width: 1px;\n  margin: 0;\n  overflow: hidden;\n  white-space: nowrap;\n  opacity: 0;\n}\n100% {\n  display: unset;\n  height: auto;\n  opacity: 1;\n}"])));
exports.proLayoutTitleHide = proLayoutTitleHide;
var siderCss = (0, _emotion.css)(_templateObject3 || (_templateObject3 = (0, _taggedTemplateLiteral2.default)(["\n  position: relative;\n  background: transparent;\n\n  &-menu {\n    position: relative;\n    z-index: 10;\n    min-height: 100%;\n  }\n"])));
exports.siderCss = siderCss;

var siderTitleViewCss = function siderTitleViewCss(designToken) {
  return (0, _emotion.css)(_templateObject4 || (_templateObject4 = (0, _taggedTemplateLiteral2.default)(["\n  position: relative;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 16px 16px;\n  color: ", ";\n  border-bottom: 1px solid ", ";\n  cursor: pointer;\n\n  > a {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    min-height: 22px;\n    font-size: 22px;\n  }\n\n  img {\n    display: inline-block;\n    height: 22px;\n    vertical-align: middle;\n  }\n\n  h1 {\n    display: inline-block;\n    height: 22px;\n    margin: 0 0 0 6px;\n    color: ", ";\n    font-weight: 600;\n    font-size: 16px;\n    line-height: 22px;\n    vertical-align: middle;\n    animation: ", " 0.35s;\n  }\n"])), designToken.sider.menuTextColor, designToken.sider.menuItemDividerColor, designToken.sider.menuTitleTextColor, proLayoutTitleHide);
};

exports.siderTitleViewCss = siderTitleViewCss;
var Sider = _layout.default.Sider;

var CollapsedIcon = function CollapsedIcon(props) {
  var isMobile = props.isMobile,
      collapsed = props.collapsed,
      rest = (0, _objectWithoutProperties2.default)(props, _excluded);
  var designToken = (0, _react.useContext)(_ProLayoutContext.ProLayoutContext);
  if (isMobile && collapsed) return null;
  return (0, _jsxRuntime.jsx)("div", (0, _objectSpread2.default)((0, _objectSpread2.default)({}, rest), {}, {
    className: (0, _emotion.cx)(props.className, defaultIconCss(designToken), (0, _emotion.css)("\n          box-shadow: 0 2px 8px -2px rgba(0,0,0,0.05), 0 1px 4px -1px rgba(25,15,15,0.07), 0 0 1px 0 rgba(0,0,0,0.08);\n          &:hover {\n            box-shadow: 0 4px 16px -4px rgba(0,0,0,0.05), 0 2px 8px -2px rgba(25,15,15,0.07), 0 1px 2px 0 rgba(0,0,0,0.08);\n          }\n        "), !isMobile && (0, _emotion.css)("\n        > svg {\n          transform: ".concat(!collapsed ? 'rotate(90deg)' : 'rotate(-90deg)', ";\n        }\n          ")), isMobile && (0, _emotion.css)("  > svg {\n            right: -16px;\n            top: 72px;\n            transform: ".concat(collapsed ? 'rotate(-90deg) translate(8px, 0px)' : 'rotate(90deg)', ";\n          "))),
    children: (0, _jsxRuntime.jsx)(_Arrow.ArrowSvgIcon, {})
  }));
};
/**
 * 渲染 title 和 logo
 *
 * @param props
 * @param renderKey
 * @returns
 */


var renderLogoAndTitle = function renderLogoAndTitle(props) {
  var renderKey = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'menuHeaderRender';
  var logo = props.logo,
      title = props.title,
      layout = props.layout;
  var renderFunction = props[renderKey || ''];

  if (renderFunction === false) {
    return null;
  }

  var logoDom = (0, _AppsLogoComponents.defaultRenderLogo)(logo);
  var titleDom = (0, _jsxRuntime.jsx)("h1", {
    children: title !== null && title !== void 0 ? title : 'Ant Design Pro'
  });

  if (renderFunction) {
    // when collapsed, no render title
    return renderFunction(logoDom, props.collapsed ? null : titleDom, props);
  }
  /**
   * 收起来时候直接不显示
   */


  if (props.isMobile) {
    return null;
  }

  if (layout === 'mix' && renderKey === 'menuHeaderRender') return false;

  if (props.collapsed) {
    return (0, _jsxRuntime.jsx)("a", {
      children: logoDom
    }, "title");
  }

  return (0, _jsxRuntime.jsxs)("a", {
    children: [logoDom, titleDom]
  }, "title");
};

exports.renderLogoAndTitle = renderLogoAndTitle;

var SiderMenu = function SiderMenu(props) {
  var _classNames, _props$menu2;

  var collapsed = props.collapsed,
      originCollapsed = props.originCollapsed,
      fixSiderbar = props.fixSiderbar,
      menuFooterRender = props.menuFooterRender,
      _onCollapse = props.onCollapse,
      theme = props.theme,
      siderWidth = props.siderWidth,
      isMobile = props.isMobile,
      onMenuHeaderClick = props.onMenuHeaderClick,
      _props$breakpoint = props.breakpoint,
      breakpoint = _props$breakpoint === void 0 ? 'lg' : _props$breakpoint,
      style = props.style,
      layout = props.layout,
      _props$menuExtraRende = props.menuExtraRender,
      menuExtraRender = _props$menuExtraRende === void 0 ? false : _props$menuExtraRende,
      links = props.links,
      menuContentRender = props.menuContentRender,
      collapsedButtonRender = props.collapsedButtonRender,
      prefixCls = props.prefixCls,
      avatarProps = props.avatarProps,
      rightContentRender = props.rightContentRender,
      actionsRender = props.actionsRender,
      onOpenChange = props.onOpenChange,
      headerHeight = props.headerHeight,
      logoStyle = props.logoStyle;
  var showSiderExtraDom = (0, _react.useMemo)(function () {
    if (isMobile) return false;
    if (layout === 'mix') return false;
    return true;
  }, [isMobile, layout]);
  var designToken = (0, _react.useContext)(_ProLayoutContext.ProLayoutContext);
  var context = (0, _react.useContext)(_configProvider.default.ConfigContext);
  var baseClassName = "".concat(prefixCls, "-sider");

  var _MenuCounter$useConta = _Counter.MenuCounter.useContainer(),
      flatMenuKeys = _MenuCounter$useConta.flatMenuKeys;

  var siderClassName = (0, _classnames.default)("".concat(baseClassName), (_classNames = {}, (0, _defineProperty2.default)(_classNames, "".concat(baseClassName, "-fixed"), fixSiderbar), (0, _defineProperty2.default)(_classNames, "".concat(baseClassName, "-layout-").concat(layout), layout && !isMobile), (0, _defineProperty2.default)(_classNames, "".concat(baseClassName, "-light"), theme !== 'dark'), _classNames));
  var headerDom = renderLogoAndTitle(props);
  var extraDom = menuExtraRender && menuExtraRender(props);
  var menuDom = (0, _react.useMemo)(function () {
    return menuContentRender !== false && flatMenuKeys && /*#__PURE__*/(0, _react.createElement)(_BaseMenu.BaseMenu, (0, _objectSpread2.default)((0, _objectSpread2.default)({}, props), {}, {
      key: "base-menu",
      mode: "inline",
      handleOpenChange: onOpenChange,
      style: {
        width: '100%'
      },
      className: "".concat(baseClassName, "-menu")
    }));
  }, [baseClassName, flatMenuKeys, menuContentRender, onOpenChange, props]);
  var linksMenuItems = (links || []).map(function (node, index) {
    return {
      className: "".concat(baseClassName, "-link"),
      label: node,
      key: index
    };
  });
  var menuRenderDom = (0, _react.useMemo)(function () {
    return menuContentRender ? menuContentRender(props, menuDom) : menuDom;
  }, [menuContentRender, menuDom, props]);
  var avatarDom = (0, _react.useMemo)(function () {
    return avatarProps && (0, _jsxRuntime.jsxs)(_space.default, {
      align: "center",
      className: (0, _emotion.cx)("".concat(baseClassName, "-actions-avatar"), (0, _emotion.css)(_templateObject5 || (_templateObject5 = (0, _taggedTemplateLiteral2.default)(["\n              font-size: 14px;\n              padding: 8px;\n              border-radius: ", ";\n              & > * {\n                cursor: pointer;\n              }\n              &:hover {\n                background: rgba(0, 0, 0, 0.018);\n              }\n            "])), designToken.borderRadiusBase)),
      children: [(0, _jsxRuntime.jsx)(_avatar.default, (0, _objectSpread2.default)({}, avatarProps)), avatarProps.title && !collapsed && (0, _jsxRuntime.jsx)("span", {
        children: avatarProps.title
      })]
    });
  }, [avatarProps, baseClassName, collapsed, designToken.borderRadiusBase]);
  var actionsDom = (0, _react.useMemo)(function () {
    if (!actionsRender) return null;
    return (0, _jsxRuntime.jsx)(_space.default, {
      align: "center",
      size: 4,
      direction: collapsed ? 'vertical' : 'horizontal',
      className: (0, _emotion.cx)(["".concat(baseClassName, "-actions-list"), (0, _emotion.css)(_templateObject6 || (_templateObject6 = (0, _taggedTemplateLiteral2.default)(["\n              color: ", ";\n              animation: ", " 0.3s;\n            "])), designToken.sider.menuTextColorSecondary, proLayoutTitleHide), collapsed && (0, _emotion.css)(_templateObject7 || (_templateObject7 = (0, _taggedTemplateLiteral2.default)(["\n                margin-bottom: 8px;\n                animation: none;\n              "])))]),
      children: actionsRender === null || actionsRender === void 0 ? void 0 : actionsRender(props).map(function (item, index) {
        return (0, _jsxRuntime.jsx)("div", {
          className: (0, _emotion.css)(_templateObject8 || (_templateObject8 = (0, _taggedTemplateLiteral2.default)(["\n                  padding: 6px;\n                  line-height: 16px;\n                  font-size: 16px;\n                  cursor: pointer;\n                  border-radius: ", ";\n                  &:hover {\n                    background: rgba(0, 0, 0, 0.018);\n                  }\n                "])), designToken.borderRadiusBase),
          children: item
        }, index);
      })
    });
  }, // eslint-disable-next-line react-hooks/exhaustive-deps
  [actionsRender, baseClassName, collapsed]);
  var appsDom = (0, _react.useMemo)(function () {
    return (0, _jsxRuntime.jsx)(_AppsLogoComponents.AppsLogoComponents, {
      appList: props.appList,
      prefixCls: props.prefixCls
    });
  }, [props.appList, props.prefixCls]);
  var collapsedDom = (0, _react.useMemo)(function () {
    if (collapsedButtonRender === false) return null;
    var dom = (0, _jsxRuntime.jsx)(CollapsedIcon, {
      isMobile: isMobile,
      collapsed: originCollapsed,
      className: "".concat(baseClassName, "-collapsed-button"),
      onClick: function onClick() {
        _onCollapse === null || _onCollapse === void 0 ? void 0 : _onCollapse(!originCollapsed);
      }
    });
    if (collapsedButtonRender) return collapsedButtonRender(collapsed, dom);
    return dom;
  }, [collapsedButtonRender, isMobile, originCollapsed, baseClassName, collapsed, _onCollapse]);
  var siderTitleViewCollapsedCss = (0, _react.useMemo)(function () {
    return (0, _emotion.css)(_templateObject9 || (_templateObject9 = (0, _taggedTemplateLiteral2.default)(["\n      flex-direction: column-reverse;\n      .", "-basicLayout-apps-icon {\n        margin-bottom: 8px;\n      }\n    "])), prefixCls);
  }, [prefixCls]);
  /** 操作区域的dom */

  var actionAreaDom = (0, _react.useMemo)(function () {
    if (!avatarDom && !actionsDom) return null;
    return (0, _jsxRuntime.jsxs)("div", {
      className: (0, _emotion.cx)("".concat(baseClassName, "-actions"), collapsed && "".concat(baseClassName, "-actions-collapsed"), (0, _emotion.css)(_templateObject10 || (_templateObject10 = (0, _taggedTemplateLiteral2.default)(["\n            display: flex;\n            align-items: center;\n            justify-content: space-between;\n            margin: 4px 0;\n            padding: 0 16px;\n            color: ", ";\n          "])), designToken.sider.menuTextColor), collapsed && (0, _emotion.css)(_templateObject11 || (_templateObject11 = (0, _taggedTemplateLiteral2.default)(["\n              flex-direction: column-reverse;\n              padding: 0 8px;\n              font-size: 16px;\n              transition: font-size 0.3s;\n            "])))),
      children: [avatarDom, actionsDom]
    });
  }, [actionsDom, avatarDom, baseClassName, collapsed, designToken.sider.menuTextColor]);
  var antPrefix = context.getPrefixCls();
  var collapsedWidth = 60;
  /* Using the useMemo hook to create a CSS class that will hide the menu when the menu is collapsed. */

  var hideMenuWhenCollapsedCss = (0, _react.useMemo)(function () {
    var _props$menu;

    // 收起时完全隐藏菜单
    if ((props === null || props === void 0 ? void 0 : (_props$menu = props.menu) === null || _props$menu === void 0 ? void 0 : _props$menu.hideMenuWhenCollapsed) && collapsed) {
      return (0, _emotion.css)(_templateObject12 || (_templateObject12 = (0, _taggedTemplateLiteral2.default)(["\n        left: -", "px;\n        position: absolute;\n      "])), collapsedWidth - 12);
    }

    return null;
  }, [collapsed, props === null || props === void 0 ? void 0 : (_props$menu2 = props.menu) === null || _props$menu2 === void 0 ? void 0 : _props$menu2.hideMenuWhenCollapsed]);
  var menuFooterDom = menuFooterRender && (menuFooterRender === null || menuFooterRender === void 0 ? void 0 : menuFooterRender(props));
  var menuDomItems = (0, _jsxRuntime.jsxs)(_jsxRuntime.Fragment, {
    children: [headerDom && (0, _jsxRuntime.jsxs)("div", {
      className: (0, _emotion.cx)([(0, _classnames.default)("".concat(baseClassName, "-logo"), (0, _defineProperty2.default)({}, "".concat(baseClassName, "-logo-collapsed"), collapsed)), siderTitleViewCss === null || siderTitleViewCss === void 0 ? void 0 : siderTitleViewCss(designToken), collapsed && siderTitleViewCollapsedCss]),
      onClick: showSiderExtraDom ? onMenuHeaderClick : undefined,
      id: "logo",
      style: logoStyle,
      children: [headerDom, appsDom]
    }), extraDom && (0, _jsxRuntime.jsx)("div", {
      className: (0, _emotion.cx)(["".concat(baseClassName, "-extra"), !headerDom && "".concat(baseClassName, "-extra-no-logo"), (0, _emotion.css)(_templateObject13 || (_templateObject13 = (0, _taggedTemplateLiteral2.default)(["\n              margin-bottom: 16px;\n              padding: 0 16px;\n            "]))), // no-logo
      !headerDom && (0, _emotion.css)(_templateObject14 || (_templateObject14 = (0, _taggedTemplateLiteral2.default)(["\n                margin-top: 16px;\n              "])))]),
      children: extraDom
    }), (0, _jsxRuntime.jsx)("div", {
      style: {
        flex: 1,
        overflowY: 'auto',
        overflowX: 'hidden'
      },
      children: menuRenderDom
    }), links ? (0, _jsxRuntime.jsx)("div", {
      className: (0, _emotion.cx)("".concat(baseClassName, "-links"), (0, _emotion.css)(_templateObject15 || (_templateObject15 = (0, _taggedTemplateLiteral2.default)(["\n              width: 100%;\n              ul.", "-menu-root {\n                height: auto;\n              }\n            "])), antPrefix)),
      children: (0, _jsxRuntime.jsx)(_menu.default, {
        inlineIndent: 16,
        className: (0, _emotion.cx)("".concat(baseClassName, "-link-menu"), (0, _emotion.css)({
          border: 'none',
          boxShadow: 'none',
          background: 'transparent'
        })),
        selectedKeys: [],
        openKeys: [],
        theme: "light",
        mode: "inline",
        items: linksMenuItems
      })
    }) : null, showSiderExtraDom && (0, _jsxRuntime.jsxs)(_jsxRuntime.Fragment, {
      children: [actionAreaDom, rightContentRender ? (0, _jsxRuntime.jsx)("div", {
        className: (0, _classnames.default)("".concat(baseClassName, "-actions"), (0, _defineProperty2.default)({}, "".concat(baseClassName, "-actions-collapsed"), collapsed)),
        children: rightContentRender === null || rightContentRender === void 0 ? void 0 : rightContentRender(props)
      }) : null]
    }), menuFooterDom && (0, _jsxRuntime.jsx)("div", {
      className: (0, _emotion.cx)(["".concat(baseClassName, "-footer"), collapsed && "".concat(baseClassName, "-footer-collapsed"), (0, _emotion.css)(_templateObject16 || (_templateObject16 = (0, _taggedTemplateLiteral2.default)(["\n              color: ", ";\n              animation: ", " 0.35s;\n              padding-bottom: 16px;\n            "])), designToken.colorTextDisable, proLayoutTitleHide)]),
      children: menuFooterDom
    })]
  });
  (0, _react.useEffect)(function () {
    return (0, _emotion.injectGlobal)(_templateObject17 || (_templateObject17 = (0, _taggedTemplateLiteral2.default)([" \n    .", "-menu-submenu > .", "-menu {\n      background-color: ", ";\n    }\n    "])), antPrefix, antPrefix, designToken.sider.menuBackgroundColor === 'transparent' ? '#fff' : designToken.sider.menuBackgroundColor);
  }, [antPrefix, designToken.sider.menuBackgroundColor]);
  return (0, _jsxRuntime.jsxs)(_jsxRuntime.Fragment, {
    children: [fixSiderbar && !isMobile && !hideMenuWhenCollapsedCss && (0, _jsxRuntime.jsx)("div", {
      className: (0, _emotion.cx)((0, _emotion.css)((0, _objectSpread2.default)({
        width: collapsed ? collapsedWidth : siderWidth,
        overflow: 'hidden',
        flex: "0 0 ".concat(collapsed ? collapsedWidth : siderWidth, "px"),
        maxWidth: collapsed ? collapsedWidth : siderWidth,
        minWidth: collapsed ? collapsedWidth : siderWidth,
        transition: "background-color 0.3s, min-width 0.3s, max-width 0.3s cubic-bezier(0.645, 0.045, 0.355, 1)"
      }, style)))
    }), (0, _jsxRuntime.jsxs)(Sider, {
      collapsible: true,
      trigger: null,
      collapsed: collapsed,
      breakpoint: breakpoint === false ? undefined : breakpoint,
      onCollapse: function onCollapse(collapse) {
        if (isMobile) return;
        _onCollapse === null || _onCollapse === void 0 ? void 0 : _onCollapse(collapse);
      },
      collapsedWidth: collapsedWidth,
      style: (0, _objectSpread2.default)({
        backgroundColor: designToken.sider.menuBackgroundColor
      }, style),
      width: siderWidth,
      theme: theme,
      className: (0, _emotion.cx)(siderClassName, siderCss, (0, _emotion.css)(_templateObject18 || (_templateObject18 = (0, _taggedTemplateLiteral2.default)(["\n            .", "-layout-sider-children {\n              position: relative;\n              display: flex;\n              flex-direction: column;\n              height: 100%;\n              border-right: 1px solid ", ";\n            }\n          "])), antPrefix, designToken.borderColorSplit), fixSiderbar && (0, _emotion.css)(_templateObject19 || (_templateObject19 = (0, _taggedTemplateLiteral2.default)(["\n              position: fixed;\n              top: 0;\n              left: 0;\n              z-index: 100;\n              height: 100%;\n            "]))), hideMenuWhenCollapsedCss, layout === 'mix' && !isMobile && (0, _emotion.css)(_templateObject20 || (_templateObject20 = (0, _taggedTemplateLiteral2.default)(["\n              height: calc(100% - ", "px);\n              top: ", "px;\n            "])), headerHeight, headerHeight)),
      children: [hideMenuWhenCollapsedCss ? (0, _jsxRuntime.jsx)("div", {
        className: "".concat(baseClassName, "-hide-when-collapsed"),
        style: {
          height: '100%',
          width: '100%',
          opacity: hideMenuWhenCollapsedCss ? 0 : 1
        },
        children: menuDomItems
      }) : menuDomItems, collapsedDom]
    })]
  });
};

exports.SiderMenu = SiderMenu;