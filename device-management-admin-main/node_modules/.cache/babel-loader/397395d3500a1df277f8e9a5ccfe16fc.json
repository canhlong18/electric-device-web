{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport \"antd/es/config-provider/style\";\nimport _ConfigProvider from \"antd/es/config-provider\";\n\nvar _templateObject, _templateObject2;\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { useContext } from 'react';\nimport { css, cx } from '../../emotion';\nimport { RouteContext } from '../../RouteContext';\n/**\n * This component can support contentWidth so you don't need to calculate the width\n * contentWidth=Fixed, width will is 1200\n *\n * @param props\n */\n\nvar GridContent = function GridContent(props) {\n  var value = useContext(RouteContext);\n  var children = props.children,\n      propsContentWidth = props.contentWidth,\n      propsClassName = props.className,\n      style = props.style;\n\n  var _useContext = useContext(_ConfigProvider.ConfigContext),\n      getPrefixCls = _useContext.getPrefixCls;\n\n  var prefixCls = props.prefixCls || getPrefixCls('pro');\n  var contentWidth = propsContentWidth || value.contentWidth;\n  var className = \"\".concat(prefixCls, \"-grid-content\");\n  var isWide = contentWidth === 'Fixed';\n  return _jsx(\"div\", {\n    className: cx(className, propsClassName, {\n      wide: isWide\n    }, css(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n          width: 100%;\\n          .\", \"-card:not(.\", \"-card-ghost) {\\n            border-radius: 6px;\\n            box-shadow: 0 2px 4px 0 rgba(0, 0, 0, 0.05), 0 1px 2px 0 rgba(25, 15, 15, 0.07),\\n              0 0 1px 0 rgba(0, 0, 0, 0.08);\\n          }\\n        \"])), prefixCls, prefixCls), isWide && css(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral([\"\\n            max-width: 1152px;\\n            margin: 0 auto;\\n          \"])))),\n    style: style,\n    children: _jsx(\"div\", {\n      className: \"\".concat(prefixCls, \"-grid-content-children\"),\n      children: children\n    })\n  });\n};\n\nexport { GridContent };","map":{"version":3,"names":["_taggedTemplateLiteral","_ConfigProvider","_templateObject","_templateObject2","jsx","_jsx","useContext","css","cx","RouteContext","GridContent","props","value","children","propsContentWidth","contentWidth","propsClassName","className","style","_useContext","ConfigContext","getPrefixCls","prefixCls","concat","isWide","wide"],"sources":["D:/Canh Long/Documents/Nam4_Ky 2/Chuyên Đề Mạng/Web/device-management-admin-main/node_modules/@ant-design/pro-layout/es/components/GridContent/index.js"],"sourcesContent":["import _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport \"antd/es/config-provider/style\";\nimport _ConfigProvider from \"antd/es/config-provider\";\n\nvar _templateObject, _templateObject2;\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { useContext } from 'react';\nimport { css, cx } from '../../emotion';\nimport { RouteContext } from '../../RouteContext';\n/**\n * This component can support contentWidth so you don't need to calculate the width\n * contentWidth=Fixed, width will is 1200\n *\n * @param props\n */\n\nvar GridContent = function GridContent(props) {\n  var value = useContext(RouteContext);\n  var children = props.children,\n      propsContentWidth = props.contentWidth,\n      propsClassName = props.className,\n      style = props.style;\n\n  var _useContext = useContext(_ConfigProvider.ConfigContext),\n      getPrefixCls = _useContext.getPrefixCls;\n\n  var prefixCls = props.prefixCls || getPrefixCls('pro');\n  var contentWidth = propsContentWidth || value.contentWidth;\n  var className = \"\".concat(prefixCls, \"-grid-content\");\n  var isWide = contentWidth === 'Fixed';\n  return _jsx(\"div\", {\n    className: cx(className, propsClassName, {\n      wide: isWide\n    }, css(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n          width: 100%;\\n          .\", \"-card:not(.\", \"-card-ghost) {\\n            border-radius: 6px;\\n            box-shadow: 0 2px 4px 0 rgba(0, 0, 0, 0.05), 0 1px 2px 0 rgba(25, 15, 15, 0.07),\\n              0 0 1px 0 rgba(0, 0, 0, 0.08);\\n          }\\n        \"])), prefixCls, prefixCls), isWide && css(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral([\"\\n            max-width: 1152px;\\n            margin: 0 auto;\\n          \"])))),\n    style: style,\n    children: _jsx(\"div\", {\n      className: \"\".concat(prefixCls, \"-grid-content-children\"),\n      children: children\n    })\n  });\n};\n\nexport { GridContent };"],"mappings":"AAAA,OAAOA,sBAAP,MAAmC,kDAAnC;AACA,OAAO,+BAAP;AACA,OAAOC,eAAP,MAA4B,yBAA5B;;AAEA,IAAIC,eAAJ,EAAqBC,gBAArB;;AAEA,SAASC,GAAG,IAAIC,IAAhB,QAA4B,mBAA5B;AACA,SAASC,UAAT,QAA2B,OAA3B;AACA,SAASC,GAAT,EAAcC,EAAd,QAAwB,eAAxB;AACA,SAASC,YAAT,QAA6B,oBAA7B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAIC,WAAW,GAAG,SAASA,WAAT,CAAqBC,KAArB,EAA4B;EAC5C,IAAIC,KAAK,GAAGN,UAAU,CAACG,YAAD,CAAtB;EACA,IAAII,QAAQ,GAAGF,KAAK,CAACE,QAArB;EAAA,IACIC,iBAAiB,GAAGH,KAAK,CAACI,YAD9B;EAAA,IAEIC,cAAc,GAAGL,KAAK,CAACM,SAF3B;EAAA,IAGIC,KAAK,GAAGP,KAAK,CAACO,KAHlB;;EAKA,IAAIC,WAAW,GAAGb,UAAU,CAACL,eAAe,CAACmB,aAAjB,CAA5B;EAAA,IACIC,YAAY,GAAGF,WAAW,CAACE,YAD/B;;EAGA,IAAIC,SAAS,GAAGX,KAAK,CAACW,SAAN,IAAmBD,YAAY,CAAC,KAAD,CAA/C;EACA,IAAIN,YAAY,GAAGD,iBAAiB,IAAIF,KAAK,CAACG,YAA9C;EACA,IAAIE,SAAS,GAAG,GAAGM,MAAH,CAAUD,SAAV,EAAqB,eAArB,CAAhB;EACA,IAAIE,MAAM,GAAGT,YAAY,KAAK,OAA9B;EACA,OAAOV,IAAI,CAAC,KAAD,EAAQ;IACjBY,SAAS,EAAET,EAAE,CAACS,SAAD,EAAYD,cAAZ,EAA4B;MACvCS,IAAI,EAAED;IADiC,CAA5B,EAEVjB,GAAG,CAACL,eAAe,KAAKA,eAAe,GAAGF,sBAAsB,CAAC,CAAC,uCAAD,EAA0C,aAA1C,EAAyD,oNAAzD,CAAD,CAA7C,CAAhB,EAAgVsB,SAAhV,EAA2VA,SAA3V,CAFO,EAEgWE,MAAM,IAAIjB,GAAG,CAACJ,gBAAgB,KAAKA,gBAAgB,GAAGH,sBAAsB,CAAC,CAAC,2EAAD,CAAD,CAA9C,CAAjB,CAF7W,CADI;IAIjBkB,KAAK,EAAEA,KAJU;IAKjBL,QAAQ,EAAER,IAAI,CAAC,KAAD,EAAQ;MACpBY,SAAS,EAAE,GAAGM,MAAH,CAAUD,SAAV,EAAqB,wBAArB,CADS;MAEpBT,QAAQ,EAAEA;IAFU,CAAR;EALG,CAAR,CAAX;AAUD,CAxBD;;AA0BA,SAASH,WAAT"},"metadata":{},"sourceType":"module"}